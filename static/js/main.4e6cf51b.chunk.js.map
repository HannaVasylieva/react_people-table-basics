{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonTableRow/PersonTableRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PersonTableRow","born","died","mother","father","motherName","fatherName","personSlug","useParams","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","fetchPeople","peopleData","useEffect","preparedPeople","useMemo","find","p","peopleWithParents","length","getClassNames","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4e6cf51b.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name || '-'}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonTableRow: React.FC<Props> = ({\n  person: {\n    name,\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  },\n}) => {\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={{\n          slug,\n          name,\n          sex,\n          born,\n          died,\n          mother,\n          father,\n          motherName,\n          fatherName,\n        }}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonTableRow } from '../PersonTableRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonTableRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\n\nconst peopleWithParents = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(p => p.name === person.motherName) || null;\n    const father = people.find(p => p.name === person.fatherName) || null;\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchPeople = async (): Promise<Person[]> => {\n    try {\n      setIsLoading(true);\n      const peopleData = await getPeople();\n\n      setIsError(false);\n\n      return peopleData;\n    } catch (error) {\n      setIsError(true);\n\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople().then(setPeople);\n  }, []);\n\n  const preparedPeople = useMemo(() => peopleWithParents(people), [people]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong. Please try again later.\n      </p>\n    );\n  }\n\n  if (people.length === 0) {\n    return <p data-cy=\"noPeopleMessage\">There are no people on the server</p>;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <PeopleTable people={preparedPeople} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  NavLink, Outlet, HashRouter as Router, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst getClassNames = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App: React.FC = () => (\n  <Router>\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getClassNames}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={getClassNames}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Outlet />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route index element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <App />,\n  );\n"],"sourceRoot":""}